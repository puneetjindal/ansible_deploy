---
- include_vars: "{{ nodesfile }}"

- group: name={{ hadoop_group}} state=present
- user: name={{ hadoop_user }} comment="Hadoop" group={{ hadoop_group}} shell=/bin/bash

- authorized_key: user={{ hadoop_user }} key="{{ lookup('file', '../templates/hadoop_rsa.pub') }}"

- name: Extract hadoop archive
  unarchive: src=/hadoop-2.7.2.tar.gz dest=/ owner={{ hadoop_user}} group={{ hadoop_group }} copy=no mode=755

- command: mv /hadoop-2.7.2 /opt/hadoop creates=/opt/hadoop removes=/hadoop-2.7.2
  
- lineinfile: dest=/root/.bashrc regexp="HADOOP_HOME=" line="export HADOOP_HOME=/opt/hadoop"
- lineinfile: dest=/root/.bashrc regexp="PATH=" line="export PATH=$PATH:$HADOOP_HOME/bin"
- lineinfile: dest=/root/.bashrc regexp="HADOOP_SSH_OPTS=" line="export HADOOP_SSH_OPTS=\"-i /{{ hadoop_user }}/.ssh/hadoop_rsa\""

- name: "Build hosts file"
  lineinfile: dest=/ansible_deploy/sample_etc regexp='{{ item.ip }}' line="{{ item.ip }} {{ item.hostname }}" state=present
  with_items: "{{ nodes }}"

- lineinfile: dest=/etc/hosts regexp='127.0.1.1' state=absent

- file: path=/opt/hadoop/tmp state=directory owner={{ hadoop_user}} group={{ hadoop_group }} mode=750
- file: path=/opt/hadoop/hadoop-data/hdfs/namenode state=directory owner={{ hadoop_user}} group={{ hadoop_group }} mode=750
- file: path=/opt/hadoop/hadoop-data/hdfs/datanode state=directory owner={{ hadoop_user}} group={{ hadoop_group }} mode=750

- name: Add the service scripts
  template: src={{ item.src }} dest={{ item.dest }} owner={{ hadoop_user}} group={{ hadoop_group }}
  with_items:
    - {src: "roles/common/templates/core-site.xml", dest: "/opt/hadoop/etc/hadoop/core-site.xml"}
    - {src: "roles/common/templates/hdfs-site.xml", dest: "/opt/hadoop/etc/hadoop/hdfs-site.xml"}
    - {src: "roles/common/templates/yarn-site.xml", dest: "/opt/hadoop/etc/hadoop/yarn-site.xml"}
    - {src: "roles/common/templates/mapred-site.xml", dest: "/opt/hadoop/etc/hadoop/mapred-site.xml"}
